#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <Wire.h>
#include <Adafruit_BNO055.h>
#include <Adafruit_Sensor.h>

// ---- WiFi ----
const char* ssid = "Deptron-Mint 2.4G";
const char* password = "deptron1974";

// ---- MQTT ----
const char* mqtt_server = "192.168.31.11"; // Jetson IP (broker)
const int   mqtt_port   = 1883;
const char* topic_imu   = "robot/sensor/imu"; // IMU topic

WiFiClient espClient;
PubSubClient client(espClient);

// ---- BNO055 ----
Adafruit_BNO055 bno = Adafruit_BNO055(55, 0x28, &Wire);

// ---- Setup ----
void setup() {
  Serial.begin(115200);
  delay(1000);

  // WiFi bağlan
  Serial.print("WiFi'ya bağlanıyor: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi bağlandı!");
  Serial.print("IP: ");
  Serial.println(WiFi.localIP());

  // MQTT bağlan
  client.setServer(mqtt_server, mqtt_port);

  // BNO055 başlat
  Wire.begin();
  if (!bno.begin()) {
    Serial.println("BNO055 bulunamadı, bağlantıyı kontrol et!");
    while (1);
  }
  delay(1000);
  bno.setExtCrystalUse(true);
}

// ---- MQTT reconnect ----
void reconnect() {
  while (!client.connected()) {
    Serial.print("MQTT'ye bağlanılıyor...");
    if (client.connect("ESP8266_IMU_Client")) { // Client ID changed to reflect ESP8266
      Serial.println("bağlandı.");
    } else {
      Serial.print("hata, rc=");
      Serial.print(client.state());
      Serial.println(" yeniden denenecek...");
      delay(2000);
    }
  }
}

// ---- Loop ----
void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  // BNO055 verileri oku
  sensors_event_t orientationData, angVelocityData, linearAccelData;
  bno.getEvent(&orientationData, Adafruit_BNO055::VECTOR_EULER);
  bno.getEvent(&angVelocityData, Adafruit_BNO055::VECTOR_GYROSCOPE);
  bno.getEvent(&linearAccelData, Adafruit_BNO055::VECTOR_LINEARACCEL);

  char msg[256];
  snprintf(msg, sizeof(msg),
           "{\"yaw\":%.2f,\"pitch\":%.2f,\"roll\":%.2f,"
           "\"gx\":%.2f,\"gy\":%.2f,\"gz\":%.2f,"
           "\"ax\":%.2f,\"ay\":%.2f,\"az\":%.2f}",
           orientationData.orientation.x,
           orientationData.orientation.y,
           orientationData.orientation.z,
           angVelocityData.gyro.x,
           angVelocityData.gyro.y,
           angVelocityData.gyro.z,
           linearAccelData.acceleration.x,
           linearAccelData.acceleration.y,
           linearAccelData.acceleration.z);

  client.publish(topic_imu, msg);
  Serial.println(msg);
  
  delay(200);
}
